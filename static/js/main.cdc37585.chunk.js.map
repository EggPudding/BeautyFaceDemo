{"version":3,"sources":["asset/pngegg.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","image","setImage","previewURL","setPreviewURL","resultURL","setResultURL","segmentURL","setSegmentURL","isPreviewLoading","setIsPreviewLoading","isResultLoading","setIsResultLoading","libColor","setLibColor","useEffect","reader","FileReader","onloadend","result","readAsDataURL","console","log","post","data","toString","replace","type","fetch","method","headers","body","JSON","stringify","then","res","json","segment","lib","style","height","className","htmlFor","id","display","accept","name","onChange","e","file","target","files","src","placeHolder","alt","textAlign","fontSize","Grid","container","spacing","direction","item","xs","Slider","defaultValue","valueLabelDisplay","step","min","max","color","onChangeCommitted","v","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdc37585.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pngegg.699fb6d5.png\";","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { getRadioUtilityClass } from '@mui/material';\nimport placeHolder from './asset/pngegg.png';\n\nfunction App() {\n  const [image, setImage] = useState();\n  const [previewURL, setPreviewURL] = useState('');\n  const [resultURL, setResultURL] = useState('');\n  const [segmentURL, setSegmentURL] = useState('');\n  const [isPreviewLoading, setIsPreviewLoading] = useState(false);\n  const [isResultLoading, setIsResultLoading] = useState(false);\n\n  const [libColor, setLibColor] = useState([0, 0, 0]);\n\n  // Image change handler\n  useEffect(() => {\n    const reader = new FileReader();\n    if (image) {\n      reader.onloadend = () => {\n        setPreviewURL(reader.result);\n      };\n      reader.readAsDataURL(image);\n    } else {\n      // setPreviewURL(null);\n      // setResultURL(null);\n    }\n  }, [image]);\n\n  // previewURL change handler\n  useEffect(() => {\n    if (previewURL) {\n      console.log(previewURL);\n\n      setIsPreviewLoading(true);\n\n      const post = {\n        data: previewURL\n          .toString()\n          .replace(/^data:image\\/(png|jpg|jpeg);base64,/, ''),\n        type: 'inference',\n      };\n\n      fetch(\n        'https://us-central1-absolute-hook-325400.cloudfunctions.net/inference',\n        // 'http://192.168.0.81:8080/',\n        // 'http://192.168.1.50:8080/',\n        {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json',\n          },\n          body: JSON.stringify(post),\n        },\n      )\n        .then((res) => res.json())\n        .then((res) => {\n          setResultURL(`data:image/png;base64,${res.data}`);\n          setSegmentURL(`data:image/png;base64,${res.segment}`);\n          setIsResultLoading(true);\n        });\n    }\n  }, [previewURL]);\n\n  // Lib color change callback\n  useEffect(() => {\n    if (isResultLoading) {\n      console.log(libColor);\n\n      const post = {\n        data: previewURL\n          .toString()\n          .replace(/^data:image\\/(png|jpg|jpeg);base64,/, ''),\n        type: 'enhance',\n        segment: segmentURL\n          .toString()\n          .replace(/^data:image\\/(png|jpg|jpeg);base64,/, ''),\n        lib: libColor,\n      };\n\n      console.log(post);\n\n      fetch(\n        'https://us-central1-absolute-hook-325400.cloudfunctions.net/inference',\n        // 'http://192.168.0.81:8080/',\n        // 'http://192.168.1.50:8080/',\n        {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json',\n          },\n          body: JSON.stringify(post),\n        },\n      )\n        .then((res) => res.json())\n        .then((res) => {\n          setResultURL(`data:image/png;base64,${res.data}`);\n          setIsResultLoading(true);\n        });\n    }\n  }, [libColor]);\n\n  return (\n    <div\n      style={{\n        'text-align': 'center',\n        'margin-top': '5vh',\n        'margin-bottom': '15vh',\n      }}\n    >\n      {/* 1. Header */}\n      <header height=\"20vmin\">\n        <h1>BeautyFace Demo v.1.0.0</h1>\n        <h2>Enhance photo with AI model</h2>\n        <h3>\n          Upload your own image and\n          <br />\n          Check the result!\n        </h3>\n      </header>\n\n      {/* 2. Upload Button */}\n      <div style={{ 'margin-top': '5vh', 'margin-bottom': '10vh' }}>\n        <label className=\"input-file-button\" htmlFor=\"input-file\">\n          Upload\n          <input\n            id=\"input-file\"\n            style={{ display: 'none' }}\n            type=\"file\"\n            accept=\"image/jpg,impge/png,image/jpeg\"\n            name=\"profile_img\"\n            onChange={(e) => {\n              // e.preventDefault();\n              const file = e.target.files[0];\n              if (file) {\n                setImage(file);\n              } else {\n                setImage(null);\n              }\n            }}\n          />\n        </label>\n      </div>\n\n      {/* 3. Image */}\n      <div>\n        {/* 3.1. Placeholder */}\n        <img\n          src={placeHolder}\n          alt=\"profile\"\n          height=\"300vh\"\n          style={{ display: isPreviewLoading ? 'none' : 'inline' }}\n        />\n\n        {/* 3.2. Preview Image */}\n        <figure\n          style={{\n            display: isPreviewLoading ? 'inline-block' : 'none',\n          }}\n        >\n          <img src={previewURL} alt=\"profile\" height=\"300vh\" />\n          <figcaption\n            style={{\n              textAlign: 'center',\n              fontSize: 'large',\n            }}\n          >\n            Original Image\n          </figcaption>\n        </figure>\n\n        {/* 3.3. Result Image */}\n        <figure\n          style={{\n            display: isResultLoading ? 'inline-block' : 'none',\n          }}\n        >\n          <img src={resultURL} alt=\"result\" height=\"300vh\" />\n          <figcaption\n            style={{\n              textAlign: 'center',\n              fontSize: 'large',\n            }}\n          >\n            Enhanced Image\n          </figcaption>\n        </figure>\n      </div>\n\n      {/* 4. Slider */}\n      <div>\n        {/* 4.1 Lib Color Slider */}\n        <h3 style={{ display: isResultLoading ? 'inline-block' : 'none' }}>\n          enhance lib color\n        </h3>\n        <Grid\n          container\n          spacing={1}\n          direction=\"row\"\n          style={{ display: isResultLoading ? 'flex' : 'none' }}\n        >\n          <Grid item xs={3} />\n          <Grid item xs={6}>\n            <Slider\n              aria-label=\"lib_r\"\n              defaultValue={0}\n              valueLabelDisplay=\"off\"\n              step={5}\n              min={-30}\n              max={30}\n              color=\"error\"\n              onChangeCommitted={(e, v) => {\n                // e.preventDefault();\n                setLibColor([v, libColor[1], libColor[2]]);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3} />\n          <Grid item xs={3} />\n          <Grid item xs={6}>\n            <Slider\n              aria-label=\"lib_g\"\n              defaultValue={0}\n              valueLabelDisplay=\"off\"\n              step={5}\n              min={-30}\n              max={30}\n              color=\"success\"\n              onChangeCommitted={(e, v) => {\n                // e.preventDefault();\n                setLibColor([libColor[0], v, libColor[2]]);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3} />\n          <Grid item xs={3} />\n          <Grid item xs={6}>\n            <Slider\n              aria-label=\"lib_b\"\n              defaultValue={0}\n              valueLabelDisplay=\"off\"\n              step={5}\n              min={-30}\n              max={30}\n              color=\"primary\"\n              onChangeCommitted={(e, v) => {\n                // e.preventDefault();\n                setLibColor([libColor[0], libColor[1], v]);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3} />\n        </Grid>\n        {/* 4.1 Lib Color Slider */}\n        {/* <h3>enhance eye color</h3>\n        <Grid container spacing={1} direction=\"row\">\n          <Grid item xs={3} />\n          <Grid item xs={6}>\n            <Slider\n              aria-label=\"eye_r\"\n              defaultValue={0}\n              valueLabelDisplay=\"off\"\n              step={5}\n              min={-30}\n              max={30}\n              color=\"error\"\n            />\n          </Grid>\n          <Grid item xs={3} />\n          <Grid item xs={3} />\n          <Grid item xs={6}>\n            <Slider\n              aria-label=\"eye_g\"\n              defaultValue={0}\n              valueLabelDisplay=\"off\"\n              step={5}\n              min={-30}\n              max={30}\n              color=\"success\"\n            />\n          </Grid>\n          <Grid item xs={3} />\n          <Grid item xs={3} />\n          <Grid item xs={6}>\n            <Slider\n              aria-label=\"eye_b\"\n              defaultValue={0}\n              valueLabelDisplay=\"off\"\n              step={5}\n              min={-30}\n              max={30}\n              color=\"primary\"\n            />\n          </Grid>\n          <Grid item xs={3} />\n        </Grid> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}