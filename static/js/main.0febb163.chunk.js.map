{"version":3,"sources":["asset/pngegg.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","image","setImage","previewURL","setPreviewURL","resultURL","setResultURL","isLoading","setIsLoading","useEffect","reader","FileReader","onloadend","result","readAsDataURL","console","log","post","data","toString","replace","fetch","method","headers","body","JSON","stringify","then","res","json","className","style","htmlFor","id","display","type","accept","name","onChange","e","file","target","files","src","placeHolder","alt","height","float","marginLeft","marginRight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAAe,G,MAAA,IAA0B,oC,OCuH1BA,MAnHf,WACE,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KA8CA,OA3CAC,qBAAU,WACR,IAAMC,EAAS,IAAIC,WACfV,GACFS,EAAOE,UAAY,WACjBR,EAAcM,EAAOG,SAEvBH,EAAOI,cAAcb,KAErBG,EAAc,MACdE,EAAa,SAEd,CAACL,IAGJQ,qBAAU,WACR,GAAIN,EAAY,CACdY,QAAQC,IAAIb,GAEZ,IAAMc,EAAO,CACXC,KAAMf,EACHgB,WACAC,QAAQ,sCAAuC,KAGpDC,MACE,wEAEA,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUT,KAGtBU,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLtB,EAAa,yBAAD,OAA0BsB,EAAIV,OAC1CV,GAAa,SAGlB,CAACL,IAGF,sBAAK2B,UAAU,MAAMC,MAAO,CAAE,aAAc,IAA5C,UACE,yBAAQD,UAAU,WAAlB,UACE,iDACA,6DACA,2DAEE,uBAFF,0BAMF,qBAAKC,MAAO,CAAE,aAAc,GAAI,gBAAiB,IAAjD,SACE,wBAAOD,UAAU,oBAAoBE,QAAQ,aAA7C,mBAEE,uBACEC,GAAG,aACHF,MAAO,CAAEG,QAAS,QAClBC,KAAK,OACLC,OAAO,iCACPC,KAAK,cACLC,SAAU,SAACC,GAET,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAE1BxC,EADEsC,GAGO,cAMnB,gCACE,qBACEG,IAAKC,EACL,iBACAC,IAAI,UACJC,OAAO,MACPf,MAAO,CAAEG,QAAS3B,EAAY,OAAS,YAEzC,yBACEwB,MAAO,CACLG,QAAS3B,EAAY,eAAiB,OACtCwC,MAAO,OACPC,WAAY,KAJhB,UAOE,qBAAKL,IAAKxC,EAAY,iBAAY0C,IAAI,UAAUC,OAAO,QACvD,2DAEF,yBACEf,MAAO,CACLG,QAAS3B,EAAY,eAAiB,OACtCwC,MAAO,QACPE,YAAa,KAJjB,UAOE,qBAAKN,IAAKtC,EAAWwC,IAAI,SAASC,OAAO,QACzC,kECpGKI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.0febb163.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pngegg.699fb6d5.png\";","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport placeHolder from './asset/pngegg.png';\n\nfunction App() {\n  const [image, setImage] = useState();\n  const [previewURL, setPreviewURL] = useState('');\n  const [resultURL, setResultURL] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Image change handler\n  useEffect(() => {\n    const reader = new FileReader();\n    if (image) {\n      reader.onloadend = () => {\n        setPreviewURL(reader.result);\n      };\n      reader.readAsDataURL(image);\n    } else {\n      setPreviewURL(null);\n      setResultURL(null);\n    }\n  }, [image]);\n\n  // previewURL change handler\n  useEffect(() => {\n    if (previewURL) {\n      console.log(previewURL);\n\n      const post = {\n        data: previewURL\n          .toString()\n          .replace(/^data:image\\/(png|jpg|jpeg);base64,/, ''),\n      };\n\n      fetch(\n        'https://us-central1-absolute-hook-325400.cloudfunctions.net/inference',\n        // 'http://192.168.0.81:8080/',\n        {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json',\n          },\n          body: JSON.stringify(post),\n        },\n      )\n        .then((res) => res.json())\n        .then((res) => {\n          setResultURL(`data:image/png;base64,${res.data}`);\n          setIsLoading(true);\n        });\n    }\n  }, [previewURL]);\n\n  return (\n    <div className=\"App\" style={{ 'margin-top': 20 }}>\n      <header className=\"App-logo\">\n        <h1>BeautyFace Demo</h1>\n        <h2>Enhance photo with AI model</h2>\n        <h3>\n          Upload your own image and\n          <br />\n          Check the result!\n        </h3>\n      </header>\n      <div style={{ 'margin-top': 60, 'margin-bottom': 40 }}>\n        <label className=\"input-file-button\" htmlFor=\"input-file\">\n          Upload\n          <input\n            id=\"input-file\"\n            style={{ display: 'none' }}\n            type=\"file\"\n            accept=\"image/jpg,impge/png,image/jpeg\"\n            name=\"profile_img\"\n            onChange={(e) => {\n              // e.preventDefault();\n              const file = e.target.files[0];\n              if (file) {\n                setImage(file);\n              } else {\n                setImage(null);\n              }\n            }}\n          />\n        </label>\n      </div>\n      <div>\n        <img\n          src={placeHolder} // Placeholder before loading image\n          aria-hidden\n          alt=\"profile\"\n          height=\"300\"\n          style={{ display: isLoading ? 'none' : 'inline' }}\n        />\n        <figure\n          style={{\n            display: isLoading ? 'inline-block' : 'none',\n            float: 'left',\n            marginLeft: 150,\n          }}\n        >\n          <img src={previewURL} aria-hidden alt=\"profile\" height=\"300\" />\n          <figcaption>Original Image</figcaption>\n        </figure>\n        <figure\n          style={{\n            display: isLoading ? 'inline-block' : 'none',\n            float: 'right',\n            marginRight: 150,\n          }}\n        >\n          <img src={resultURL} alt=\"result\" height=\"300\" />\n          <figcaption>Enhanced Image</figcaption>\n        </figure>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}